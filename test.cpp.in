// gtest
#include "gtest/gtest.h"

// stdlib
#include <cstdint>
#include <random>

namespace
{
  std::seed_seq &GetSeed()
  {
    static uint32_t const data[]
    {
      0x4995b708, 0xdccec1c3, 0xdd10a637, 0x58d5467d 
    , 0x541f433a, 0x2b83fea4, 0x1405243e, 0x26422185 
    , 0x8bd7a7f7, 0x2cb02968, 0x613f4a6d, 0x909177e6 
    , 0x3893ba89, 0xd37de2b8, 0x42573711, 0xa04f9441 
    , 0x4995b708, 0xdccec1c3, 0xdd10a637, 0x58d5467d 
    , 0x541f433a, 0x2b83fea4, 0x1405243e, 0x26422185 
    , 0x8bd7a7f7, 0x2cb02968, 0x613f4a6d, 0x909177e6 
    , 0x3893ba89, 0xd37de2b8, 0x42573711, 0xa04f9441 
    , 0x4995b708, 0xdccec1c3, 0xdd10a637, 0x58d5467d 
    , 0x541f433a, 0x2b83fea4, 0x1405243e, 0x26422185 
    , 0x8bd7a7f7, 0x2cb02968, 0x613f4a6d, 0x909177e6 
    , 0x3893ba89, 0xd37de2b8, 0x42573711, 0xa04f9441 
    , 0x4995b708, 0xdccec1c3, 0xdd10a637, 0x58d5467d 
    , 0x541f433a, 0x2b83fea4, 0x1405243e, 0x26422185 
    , 0x8bd7a7f7, 0x2cb02968, 0x613f4a6d, 0x909177e6 
    , 0x3893ba89, 0xd37de2b8, 0x42573711, 0xa04f9441 
    };
    static std::seed_seq seq(std::begin(data), std::end(data));
    return seq;
  }

  static std::mt19937 rng{GetSeed()};
}

#include "@TESTFILE@"

#include <csignal>
#include <cstdlib>
#include <iostream>
#include <stdexcept>

void signal_handler(int) 
{
  std::exit(EXIT_FAILURE);
}

int main(int argc, char *argv[])
try
{
  if(SIG_ERR == std::signal(SIGABRT, signal_handler))
  {
    throw std::logic_error("failed to set up testing environment");
  }

  ::testing::InitGoogleTest(&argc, argv);
  return RUN_ALL_TESTS();
}
catch(std::exception &e)
{
  std::cerr << e.what() << std::endl;
  return EXIT_FAILURE;
}
catch(...)
{
  return EXIT_FAILURE;
}
